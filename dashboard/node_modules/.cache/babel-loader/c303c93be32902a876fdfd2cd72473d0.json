{"ast":null,"code":"function makeNode(ch) {\n  this.ch = ch;\n  this.isTerminal = false;\n  this.mapping = {};\n  this.words = [];\n}\n\nconst add = (str, i, root) => {\n  //  console.log('working!')\n  // console.log(str);\n  if (i === str.length) {\n    root.isTerminal = true;\n    return;\n  }\n\n  if (!root.map[str[i]]) root.map[str[i]] = new makeNode(str[i]);\n  root.words.push(str);\n  add(str, i + 1, root.map[str[i]]);\n};\n\nconst search = (str, i, root) => {\n  const ch = str[i]; // console.log(root.map[\"F\"]);\n\n  if (i === str.length) {\n    return root.words;\n  }\n\n  if (!root.map[str[i]]) {\n    console.log(root.map[str[i]]);\n    return [];\n  }\n\n  return search(str, i + 1, root.map[ch]);\n};\n\nexport { search, add, makeNode };","map":{"version":3,"sources":["C:/Users/PRATHAM/Desktop/StockDashBoard/dashboard/src/trie.js"],"names":["makeNode","ch","isTerminal","mapping","words","add","str","i","root","length","map","push","search","console","log"],"mappings":"AAGA,SAASA,QAAT,CAAkBC,EAAlB,EACA;AACA,OAAKA,EAAL,GAAQA,EAAR;AACA,OAAKC,UAAL,GAAgB,KAAhB;AACA,OAAKC,OAAL,GAAa,EAAb;AACA,OAAKC,KAAL,GAAW,EAAX;AACC;;AACD,MAAMC,GAAG,GAAC,CAACC,GAAD,EAAKC,CAAL,EAAOC,IAAP,KAAc;AACxB;AACI;AACD,MAAGD,CAAC,KAAGD,GAAG,CAACG,MAAX,EACA;AACID,IAAAA,IAAI,CAACN,UAAL,GAAgB,IAAhB;AACA;AACH;;AAED,MAAG,CAACM,IAAI,CAACE,GAAL,CAASJ,GAAG,CAACC,CAAD,CAAZ,CAAJ,EACAC,IAAI,CAACE,GAAL,CAASJ,GAAG,CAACC,CAAD,CAAZ,IAAiB,IAAIP,QAAJ,CAAaM,GAAG,CAACC,CAAD,CAAhB,CAAjB;AAEAC,EAAAA,IAAI,CAACJ,KAAL,CAAWO,IAAX,CAAgBL,GAAhB;AAEAD,EAAAA,GAAG,CAACC,GAAD,EAAKC,CAAC,GAAC,CAAP,EAASC,IAAI,CAACE,GAAL,CAASJ,GAAG,CAACC,CAAD,CAAZ,CAAT,CAAH;AACF,CAfD;;AAiBA,MAAMK,MAAM,GAAC,CAACN,GAAD,EAAKC,CAAL,EAAOC,IAAP,KAAc;AACvB,QAAMP,EAAE,GAACK,GAAG,CAACC,CAAD,CAAZ,CADuB,CAEvB;;AACA,MAAGA,CAAC,KAAGD,GAAG,CAACG,MAAX,EACA;AACG,WAAOD,IAAI,CAACJ,KAAZ;AACF;;AACD,MAAG,CAACI,IAAI,CAACE,GAAL,CAASJ,GAAG,CAACC,CAAD,CAAZ,CAAJ,EACA;AACGM,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACE,GAAL,CAASJ,GAAG,CAACC,CAAD,CAAZ,CAAZ;AACC,WAAO,EAAP;AACH;;AACD,SAAOK,MAAM,CAACN,GAAD,EAAKC,CAAC,GAAC,CAAP,EAASC,IAAI,CAACE,GAAL,CAAST,EAAT,CAAT,CAAb;AAEH,CAdD;;AAeA,SAAQW,MAAR,EAAeP,GAAf,EAAmBL,QAAnB","sourcesContent":["\r\n\r\n\r\nfunction makeNode(ch)\r\n{\r\nthis.ch=ch;\r\nthis.isTerminal=false;\r\nthis.mapping={};\r\nthis.words=[];\r\n}\r\nconst add=(str,i,root)=>{\r\n//  console.log('working!')\r\n    // console.log(str);\r\n   if(i===str.length)\r\n   {\r\n       root.isTerminal=true;\r\n       return;\r\n   }\r\n\r\n   if(!root.map[str[i]])\r\n   root.map[str[i]]=new makeNode(str[i]);\r\n\r\n   root.words.push(str);\r\n\r\n   add(str,i+1,root.map[str[i]]);\r\n}\r\n\r\nconst search=(str,i,root)=>{\r\n    const ch=str[i];\r\n    // console.log(root.map[\"F\"]);\r\n    if(i===str.length)\r\n    {\r\n       return root.words;\r\n    }\r\n    if(!root.map[str[i]])\r\n    {\r\n       console.log(root.map[str[i]]) ;\r\n        return [];\r\n    }\r\n    return search(str,i+1,root.map[ch])\r\n\r\n}\r\nexport {search,add,makeNode};"]},"metadata":{},"sourceType":"module"}