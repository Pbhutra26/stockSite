{"ast":null,"code":"import * as actionTypes from './types.js';\nimport dummyData from './dummyData.js';\nconst initialState = {\n  products: dummyData,\n  portfolio: [],\n  currentItem: null,\n  invested: 0,\n  currentPrice: 0\n};\n\nconst shopReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.BUY:\n      const item = state.products.find(prod => prod.symbol === action.payload.id);\n      const inPortfolio = state.portfolio.find(item => item.symbol === action.payload.id ? true : false);\n      const quant = parseInt(action.payload.qty);\n      const price = item.regularMarketPrice;\n      return { ...state,\n        portfolio: inPortfolio ? state.portfolio.map(i => i.symbol === action.payload.id ? { ...i,\n          quantity: i.quantity + quant\n        } : i) : [...state.portfolio, { ...item,\n          quantity: quant\n        }],\n        invested: state.invested + quant * price\n      };\n\n    case actionTypes.SELL:\n      const currentItem = state.products.find(prod => prod.symbol === action.payload.id);\n      const inPort = state.portfolio.find(item => item.symbol === action.payload.id ? true : false);\n      const p = currentItem.regularMarketPrice;\n      const q = parseInt(action.payload.qty);\n      return { ...state,\n        portfolio: inPort ? state.portfolio.map(i => i.symbol === action.payload.id && i.quantity >= q ? { ...i,\n          quantity: i.quantity - q\n        } : i) : state.portfolio,\n        invested: state.invested - p\n      };\n\n    case actionTypes.REMOVE:\n      return { ...state,\n        portfolio: state.portfolio.filter(i => i.quantity !== 0)\n      };\n\n    case actionTypes.VIEW:\n      return {\n        currentItem: action.payload.id\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["C:/Users/PRATHAM/Desktop/StockDashBoard/dashboard/src/redux/reducer.js"],"names":["actionTypes","dummyData","initialState","products","portfolio","currentItem","invested","currentPrice","shopReducer","state","action","type","BUY","item","find","prod","symbol","payload","id","inPortfolio","quant","parseInt","qty","price","regularMarketPrice","map","i","quantity","SELL","inPort","p","q","REMOVE","filter","VIEW"],"mappings":"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","sourcesContent":["import * as actionTypes from './types.js';\r\nimport dummyData from './dummyData.js';\r\nconst initialState={\r\n    products:dummyData,\r\n    portfolio:[],\r\n    currentItem:null,\r\n    invested:0,\r\n    currentPrice:0\r\n}\r\n\r\nconst shopReducer=(state=initialState,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case actionTypes.BUY:\r\n            const item=state.products.find(prod=>prod.symbol===action.payload.id)\r\n            const inPortfolio=state.portfolio.find(item=>item.symbol===action.payload.id?true:false);\r\n            const quant=parseInt(action.payload.qty)\r\n            const price=item.regularMarketPrice;\r\n        return{\r\n                 ...state,\r\n                 portfolio:inPortfolio?\r\n                 state.portfolio.map(\r\n                     (i)=>\r\n                     i.symbol===action.payload.id?\r\n                     {...i,quantity:i.quantity+quant}:i):\r\n                     [...state.portfolio,{...item,quantity:quant}],\r\n                     invested:state.invested+quant*price\r\n        };\r\n        case actionTypes.SELL:\r\n            const currentItem=state.products.find(prod=>prod.symbol===action.payload.id)\r\n            const inPort=state.portfolio.find(item=>item.symbol===action.payload.id?true:\r\n                 false);\r\n           \r\n            const p=currentItem.regularMarketPrice;\r\n            const q=parseInt(action.payload.qty)\r\n            \r\n            return{\r\n            ...state,\r\n                 portfolio:inPort?\r\n                 state.portfolio.map(\r\n                     (i)=>\r\n                     i.symbol===action.payload.id&&\r\n                     i.quantity>=q?\r\n\r\n                     {...i,quantity:i.quantity-q}\r\n                     :i\r\n                     )\r\n                     :state.portfolio,\r\n                     invested:state.invested-p\r\n        }\r\n        case actionTypes.REMOVE:\r\n\r\n            return{\r\n            ...state,\r\n                   portfolio: state.portfolio.filter((i)=>i.quantity!==0)\r\n            }\r\n        case actionTypes.VIEW:return{\r\n               currentItem:action.payload.id\r\n        }\r\n        default:return state;\r\n    }\r\n};\r\nexport default shopReducer;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}