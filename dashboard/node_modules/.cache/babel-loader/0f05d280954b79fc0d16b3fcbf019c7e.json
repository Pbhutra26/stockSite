{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\nexport default function useAlan() {\n  _s();\n\n  const [alanInstance, setAlanInstance] = useState();\n  const buyStock = useCallback(() => {\n    alanInstance.playText('Buying the stock');\n  }, [alanInstance]);\n\n  const sellStock = () => {};\n\n  const viewStock = () => {};\n\n  useEffect(() => {\n    window.addEventListener('BUY', buyStock);\n    return () => {\n      window.removeEventListener('BUY', buyStock);\n    };\n  }, [buyStock]);\n  useEffect(() => {\n    if (alanInstance != null) return;\n    setAlanInstance(alanBtn({\n      key: 'c0558ab0ae1d903f14cf002e918a2eae2e956eca572e1d8b807a3e2338fdd0dc/stage',\n      onCommand: ({\n        command\n      }) => {\n        window.dispatchEvent(new CustomEvent(command));\n      }\n    }));\n  }, []);\n  return null;\n}\n\n_s(useAlan, \"u/+31vUGVUIF4QbJF+WTzyEG0d4=\");","map":{"version":3,"sources":["C:/Users/PRATHAM/Desktop/StockDashBoard/dashboard/src/hooks/useAlan.js"],"names":["React","useEffect","useState","useCallback","alanBtn","useAlan","alanInstance","setAlanInstance","buyStock","playText","sellStock","viewStock","window","addEventListener","removeEventListener","key","onCommand","command","dispatchEvent","CustomEvent"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,EAAiCC,WAAjC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,EAAhD;AAEA,QAAMM,QAAQ,GAACL,WAAW,CAAC,MAAI;AAC7BG,IAAAA,YAAY,CAACG,QAAb,CAAsB,kBAAtB;AACD,GAFyB,EAExB,CAACH,YAAD,CAFwB,CAA1B;;AAGA,QAAMI,SAAS,GAAC,MAAI,CAEnB,CAFD;;AAGA,QAAMC,SAAS,GAAC,MAAI,CAEnB,CAFD;;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACfW,IAAAA,MAAM,CAACC,gBAAP,CAAwB,KAAxB,EAA8BL,QAA9B;AAEA,WAAO,MAAI;AACPI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,KAA3B,EAAiCN,QAAjC;AACH,KAFD;AAIA,GAPQ,EAON,CAACA,QAAD,CAPM,CAAT;AAWAP,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGK,YAAY,IAAE,IAAjB,EAAuB;AAEvBC,IAAAA,eAAe,CAACH,OAAO,CAAC;AACpBW,MAAAA,GAAG,EAAE,wEADe;AAEpBC,MAAAA,SAAS,EAAE,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAe;AACtBL,QAAAA,MAAM,CAACM,aAAP,CAAqB,IAAIC,WAAJ,CAAgBF,OAAhB,CAArB;AACH;AAJmB,KAAD,CAAR,CAAf;AAMH,GAVQ,EAUN,EAVM,CAAT;AAWA,SAAO,IAAP;AACH;;GApCuBZ,O","sourcesContent":["import React,{useEffect,useState,useCallback} from 'react'\r\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\r\nexport default function useAlan() {\r\n    const [alanInstance, setAlanInstance] = useState();\r\n\r\n    const buyStock=useCallback(()=>{\r\n      alanInstance.playText('Buying the stock')\r\n    },[alanInstance]);\r\n    const sellStock=()=>{\r\n        \r\n    }\r\n    const viewStock=()=>{\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n     window.addEventListener('BUY',buyStock);\r\n\r\n     return ()=>{\r\n         window.removeEventListener('BUY',buyStock);\r\n     }\r\n        \r\n    }, [buyStock])\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(alanInstance!=null) return;\r\n\r\n        setAlanInstance(alanBtn({ \r\n            key: 'c0558ab0ae1d903f14cf002e918a2eae2e956eca572e1d8b807a3e2338fdd0dc/stage',\r\n            onCommand: ({command}) => {\r\n                window.dispatchEvent(new CustomEvent(command));\r\n            }\r\n          }))\r\n    }, [])\r\n    return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}