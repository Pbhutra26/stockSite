{"ast":null,"code":"import * as actionTypes from './types.js';\nimport dummyData from './dummyData.js';\nconst initialState = {\n  products: dummyData,\n  portfolio: [],\n  currentProduct: dummyData[0],\n  invested: 0,\n  portfolioValue: 0,\n  isClicked: false\n};\n\nconst shopReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.BUY:\n      // console.log(state.portfolio);\n      const item = state.products.find(prod => prod.symbol === action.payload.id);\n      const inPortfolio = state.portfolio.find(item => item.symbol === action.payload.id ? true : false);\n      const quant = parseInt(action.payload.qty);\n      console.log(action.payload.qty);\n\n      if (action.payload.qty === 0) {\n        alert('Please add quantity');\n        return state;\n      }\n\n      const price = item.regularMarketPrice;\n      return { ...state,\n        portfolio: inPortfolio ? state.portfolio.map(i => i.symbol === action.payload.id ? { ...i,\n          quantity: i.quantity + quant\n        } : i) : [...state.portfolio, { ...item,\n          quantity: quant\n        }],\n        invested: state.invested + quant * price\n      };\n\n    case actionTypes.SELL:\n      const currentItem = state.products.find(prod => prod.symbol === action.payload.id);\n      const inPort = state.portfolio.find(item => item.symbol === action.payload.id ? true : false);\n      const p = currentItem.regularMarketPrice;\n      const q = parseInt(action.payload.qty);\n      return { ...state,\n        portfolio: inPort ? state.portfolio.map(i => i.symbol === action.payload.id && i.quantity >= q ? { ...i,\n          quantity: i.quantity - q\n        } : i) : state.portfolio,\n        invested: state.invested - p * q >= 0 ? state.invested - p * q : state.invested\n      };\n\n    case actionTypes.REMOVE:\n      return { ...state,\n        portfolio: state.portfolio.filter(i => i.quantity !== 0)\n      };\n\n    case actionTypes.VIEW:\n      const curr = state.products.find(item => action.payload.id === item.symbol);\n      return { ...state,\n        currentProduct: curr\n      };\n\n    case actionTypes.UPDATE:\n      return { ...state,\n        products: action.payload\n      };\n\n    case actionTypes.CLICKED:\n      return { ...state,\n        isClicked: !state.isClicked\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["C:/Users/PRATHAM/Desktop/StockDashBoard/dashboard/src/redux/reducer.js"],"names":["actionTypes","dummyData","initialState","products","portfolio","currentProduct","invested","portfolioValue","isClicked","shopReducer","state","action","type","BUY","item","find","prod","symbol","payload","id","inPortfolio","quant","parseInt","qty","console","log","alert","price","regularMarketPrice","map","i","quantity","SELL","currentItem","inPort","p","q","REMOVE","filter","VIEW","curr","UPDATE","CLICKED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,MAAMC,YAAY,GAAC;AACfC,EAAAA,QAAQ,EAACF,SADM;AAEfG,EAAAA,SAAS,EAAC,EAFK;AAGfC,EAAAA,cAAc,EAACJ,SAAS,CAAC,CAAD,CAHT;AAIfK,EAAAA,QAAQ,EAAC,CAJM;AAKfC,EAAAA,cAAc,EAAC,CALA;AAMfC,EAAAA,SAAS,EAAC;AANK,CAAnB;;AAQA,MAAMC,WAAW,GAAC,CAACC,KAAK,GAACR,YAAP,EAAoBS,MAApB,KAA6B;AAG3C,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKZ,WAAW,CAACa,GAAjB;AACI;AACA,YAAMC,IAAI,GAACJ,KAAK,CAACP,QAAN,CAAeY,IAAf,CAAoBC,IAAI,IAAEA,IAAI,CAACC,MAAL,KAAcN,MAAM,CAACO,OAAP,CAAeC,EAAvD,CAAX;AACA,YAAMC,WAAW,GAACV,KAAK,CAACN,SAAN,CAAgBW,IAAhB,CAAqBD,IAAI,IAAEA,IAAI,CAACG,MAAL,KAAcN,MAAM,CAACO,OAAP,CAAeC,EAA7B,GAAgC,IAAhC,GAAqC,KAAhE,CAAlB;AACA,YAAME,KAAK,GAACC,QAAQ,CAACX,MAAM,CAACO,OAAP,CAAeK,GAAhB,CAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYd,MAAM,CAACO,OAAP,CAAeK,GAA3B;;AACA,UAAGZ,MAAM,CAACO,OAAP,CAAeK,GAAf,KAAqB,CAAxB,EACA;AACIG,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACA,eAAOhB,KAAP;AACS;;AACb,YAAMiB,KAAK,GAACb,IAAI,CAACc,kBAAjB;AACJ,aAAM,EACG,GAAGlB,KADN;AAEGN,QAAAA,SAAS,EAACgB,WAAW,GACrBV,KAAK,CAACN,SAAN,CAAgByB,GAAhB,CACKC,CAAD,IACAA,CAAC,CAACb,MAAF,KAAWN,MAAM,CAACO,OAAP,CAAeC,EAA1B,GACA,EAAC,GAAGW,CAAJ;AAAMC,UAAAA,QAAQ,EAACD,CAAC,CAACC,QAAF,GAAWV;AAA1B,SADA,GAECS,CAJL,CADqB,GAMjB,CAAC,GAAGpB,KAAK,CAACN,SAAV,EAAoB,EAAC,GAAGU,IAAJ;AAASiB,UAAAA,QAAQ,EAACV;AAAlB,SAApB,CARP;AASOf,QAAAA,QAAQ,EAACI,KAAK,CAACJ,QAAN,GAAee,KAAK,GAACM;AATrC,OAAN;;AAWA,SAAK3B,WAAW,CAACgC,IAAjB;AACI,YAAMC,WAAW,GAACvB,KAAK,CAACP,QAAN,CAAeY,IAAf,CAAoBC,IAAI,IAAEA,IAAI,CAACC,MAAL,KAAcN,MAAM,CAACO,OAAP,CAAeC,EAAvD,CAAlB;AACA,YAAMe,MAAM,GAACxB,KAAK,CAACN,SAAN,CAAgBW,IAAhB,CAAqBD,IAAI,IAAEA,IAAI,CAACG,MAAL,KAAcN,MAAM,CAACO,OAAP,CAAeC,EAA7B,GAAgC,IAAhC,GACnC,KADQ,CAAb;AAGA,YAAMgB,CAAC,GAACF,WAAW,CAACL,kBAApB;AACA,YAAMQ,CAAC,GAACd,QAAQ,CAACX,MAAM,CAACO,OAAP,CAAeK,GAAhB,CAAhB;AAEA,aAAM,EACN,GAAGb,KADG;AAEDN,QAAAA,SAAS,EAAC8B,MAAM,GAChBxB,KAAK,CAACN,SAAN,CAAgByB,GAAhB,CACKC,CAAD,IACAA,CAAC,CAACb,MAAF,KAAWN,MAAM,CAACO,OAAP,CAAeC,EAA1B,IACAW,CAAC,CAACC,QAAF,IAAYK,CADZ,GAGA,EAAC,GAAGN,CAAJ;AAAMC,UAAAA,QAAQ,EAACD,CAAC,CAACC,QAAF,GAAWK;AAA1B,SAHA,GAICN,CANL,CADgB,GASXpB,KAAK,CAACN,SAXV;AAYGE,QAAAA,QAAQ,EAACI,KAAK,CAACJ,QAAN,GAAe6B,CAAC,GAACC,CAAjB,IAAoB,CAApB,GAAsB1B,KAAK,CAACJ,QAAN,GAAe6B,CAAC,GAACC,CAAvC,GAAyC1B,KAAK,CAACJ;AAZ3D,OAAN;;AAcJ,SAAKN,WAAW,CAACqC,MAAjB;AAEI,aAAM,EACN,GAAG3B,KADG;AAECN,QAAAA,SAAS,EAAEM,KAAK,CAACN,SAAN,CAAgBkC,MAAhB,CAAwBR,CAAD,IAAKA,CAAC,CAACC,QAAF,KAAa,CAAzC;AAFZ,OAAN;;AAIJ,SAAK/B,WAAW,CAACuC,IAAjB;AACI,YAAMC,IAAI,GAAC9B,KAAK,CAACP,QAAN,CAAeY,IAAf,CAAoBD,IAAI,IAAEH,MAAM,CAACO,OAAP,CAAeC,EAAf,KAAoBL,IAAI,CAACG,MAAnD,CAAX;AACA,aAAM,EAAC,GAAGP,KAAJ;AACHL,QAAAA,cAAc,EAACmC;AADZ,OAAN;;AAEJ,SAAKxC,WAAW,CAACyC,MAAjB;AAEI,aAAM,EACH,GAAG/B,KADA;AAEHP,QAAAA,QAAQ,EAACQ,MAAM,CAACO;AAFb,OAAN;;AAIJ,SAAKlB,WAAW,CAAC0C,OAAjB;AAEQ,aAAM,EACH,GAAGhC,KADA;AAEAF,QAAAA,SAAS,EAAC,CAACE,KAAK,CAACF;AAFjB,OAAN;;AAMR;AAAQ,aAAOE,KAAP;AAvEZ;AAyEH,CA5ED;;AA6EA,eAAeD,WAAf","sourcesContent":["import * as actionTypes from './types.js';\r\nimport dummyData from './dummyData.js';\r\nconst initialState={\r\n    products:dummyData,\r\n    portfolio:[],\r\n    currentProduct:dummyData[0],\r\n    invested:0,\r\n    portfolioValue:0,\r\n    isClicked:false\r\n}\r\nconst shopReducer=(state=initialState,action)=>{\r\n\r\n\r\n    switch(action.type)\r\n    {\r\n        case actionTypes.BUY:\r\n            // console.log(state.portfolio);\r\n            const item=state.products.find(prod=>prod.symbol===action.payload.id)\r\n            const inPortfolio=state.portfolio.find(item=>item.symbol===action.payload.id?true:false);\r\n            const quant=parseInt(action.payload.qty)\r\n            console.log(action.payload.qty);\r\n            if(action.payload.qty===0)\r\n            {\r\n                alert('Please add quantity');\r\n                return state;\r\n                        }\r\n            const price=item.regularMarketPrice;\r\n        return{\r\n                 ...state,\r\n                 portfolio:inPortfolio?\r\n                 state.portfolio.map(\r\n                     (i)=>\r\n                     i.symbol===action.payload.id?\r\n                     {...i,quantity:i.quantity+quant,\r\n                    }:i):\r\n                     [...state.portfolio,{...item,quantity:quant}],\r\n                     invested:state.invested+quant*price\r\n        };\r\n        case actionTypes.SELL:\r\n            const currentItem=state.products.find(prod=>prod.symbol===action.payload.id)\r\n            const inPort=state.portfolio.find(item=>item.symbol===action.payload.id?true:\r\n                 false);\r\n           \r\n            const p=currentItem.regularMarketPrice;\r\n            const q=parseInt(action.payload.qty)\r\n            \r\n            return{\r\n            ...state,\r\n                 portfolio:inPort?\r\n                 state.portfolio.map(\r\n                     (i)=>\r\n                     i.symbol===action.payload.id&&\r\n                     i.quantity>=q?\r\n\r\n                     {...i,quantity:i.quantity-q}\r\n                     :i\r\n                     )\r\n                     :state.portfolio,\r\n                     invested:state.invested-p*q>=0?state.invested-p*q:state.invested\r\n        }\r\n        case actionTypes.REMOVE:\r\n\r\n            return{\r\n            ...state,\r\n                   portfolio: state.portfolio.filter((i)=>i.quantity!==0)\r\n            }\r\n        case actionTypes.VIEW:\r\n            const curr=state.products.find(item=>action.payload.id===item.symbol)\r\n            return{...state,\r\n               currentProduct:curr}\r\n        case actionTypes.UPDATE:\r\n\r\n            return{\r\n               ...state,\r\n               products:action.payload\r\n            }\r\n        case actionTypes.CLICKED:\r\n\r\n                return{\r\n                   ...state,\r\n                      isClicked:!state.isClicked\r\n                }\r\n   \r\n              \r\n        default:return state;\r\n    }\r\n};\r\nexport default shopReducer;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}