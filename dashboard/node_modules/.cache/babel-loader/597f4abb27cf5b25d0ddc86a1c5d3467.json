{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback } from 'react';\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\nimport { buyStock, sellStock, viewStock } from '../redux/actions.js';\nimport store from '../redux/store.js';\nimport { useHistory } from 'react-router-dom';\nexport default function Alan() {\n  _s();\n\n  const history = useHistory();\n  var stockList = {\n    'Apple': 'AAPL',\n    'Microsoft': 'MSFT',\n    'Facebook': 'FB',\n    'Alphabet': 'GOOG',\n    'Google': 'GOOG',\n    'Alibaba': 'BABA',\n    'Tesla': 'TSLA',\n    'Nvidia': 'NVDA',\n    'Intel': 'INTC',\n    'Salesforce': 'CRM',\n    'Advanced Micro Devices': 'AMD',\n    'Paypal': 'PYPL',\n    'Electronics art': 'EA',\n    'EA': 'EA',\n    'Match group': 'MTCH',\n    'Zillow group': 'ZG'\n  };\n  const [alanInstance, setAlanInstance] = useState();\n  const buyStockAlan = useCallback(({\n    detail: {\n      name,\n      quantity\n    }\n  }) => {\n    store.dispatch(buyStock(stockList[name], quantity));\n    history.push('/portfolio');\n  }, [alanInstance, buyStock, stockList]);\n  const sellStockAlan = useCallback(({\n    detail: {\n      name,\n      quantity\n    }\n  }) => {\n    console.log(stockList[name]);\n    store.dispatch(sellStock(stockList[name], quantity));\n  }, [stockList, alanInstance, sellStock]);\n  const viewStockAlan = useCallback(({\n    detail: {\n      name\n    }\n  }) => {\n    store.dispatch(viewStock(stockList[name]));\n    history.push('/stock');\n  }, [alanInstance, viewStock, stockList]);\n  const openDashboardAlan = useCallback(() => {\n    history.push('/');\n  }, [alanInstance, history]);\n  const openPortfolioAlan = useCallback(() => {\n    history.push('/portfolio');\n    console.log(history);\n  }, [alanInstance, history]);\n  useEffect(() => {\n    window.addEventListener('BUY', buyStockAlan);\n    window.addEventListener('SELL', sellStockAlan);\n    window.addEventListener('VIEW', viewStockAlan);\n    window.addEventListener('OPEN-PORTFOLIO', openDashboardAlan);\n    window.addEventListener('OPEN-DASHBOARD', openPortfolioAlan);\n    return () => {\n      window.removeEventListener('BUY', buyStockAlan);\n      window.removeEventListener('SELL', sellStockAlan);\n      window.removeEventListener('VIEW', viewStockAlan);\n      window.removeEventListener('OPEN-PORTFOLIO', openPortfolioAlan);\n      window.removeEventListener('OPEN-DASHBOARD', openDashboardAlan);\n    };\n  }, [buyStockAlan, sellStockAlan, viewStockAlan, openPortfolioAlan, openDashboardAlan]);\n  useEffect(() => {\n    if (alanInstance != null) return;\n    setAlanInstance(alanBtn({\n      key: 'c0558ab0ae1d903f14cf002e918a2eae2e956eca572e1d8b807a3e2338fdd0dc/stage',\n      onCommand: ({\n        command,\n        payload\n      }) => {\n        window.dispatchEvent(new CustomEvent(command, {\n          detail: payload\n        }));\n      }\n    }));\n  }, [alanInstance]);\n  return null;\n}\n\n_s(Alan, \"nRSLNPg9odHJOzpSavf70AFW0Ks=\", false, function () {\n  return [useHistory];\n});\n\n_c = Alan;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alan\");","map":{"version":3,"sources":["C:/Users/PRATHAM/Desktop/StockDashBoard/dashboard/src/hooks/useAlan.js"],"names":["useEffect","useState","useCallback","alanBtn","buyStock","sellStock","viewStock","store","useHistory","Alan","history","stockList","alanInstance","setAlanInstance","buyStockAlan","detail","name","quantity","dispatch","push","sellStockAlan","console","log","viewStockAlan","openDashboardAlan","openPortfolioAlan","window","addEventListener","removeEventListener","key","onCommand","command","payload","dispatchEvent","CustomEvent"],"mappings":";;AAAA,SAAQA,SAAR,EAAkBC,QAAlB,EAA2BC,WAA3B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,EAA2BC,SAA3B,QAA2C,qBAA3C;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC/B,QAAMC,OAAO,GAACF,UAAU,EAAxB;AAGI,MAAIG,SAAS,GAAC;AACV,aAAS,MADC;AAEV,iBAAY,MAFF;AAGV,gBAAW,IAHD;AAIV,gBAAW,MAJD;AAKV,cAAS,MALC;AAMV,eAAU,MANA;AAOV,aAAQ,MAPE;AAQV,cAAS,MARC;AASV,aAAQ,MATE;AAUV,kBAAa,KAVH;AAWV,8BAAyB,KAXf;AAYV,cAAS,MAZC;AAaV,uBAAkB,IAbR;AAcV,UAAK,IAdK;AAeV,mBAAc,MAfJ;AAgBV,oBAAe;AAhBL,GAAd;AAkBA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,EAAhD;AAEA,QAAMa,YAAY,GAACZ,WAAW,CAAC,CAAC;AAACa,IAAAA,MAAM,EAAC;AAACC,MAAAA,IAAD;AAAMC,MAAAA;AAAN;AAAR,GAAD,KAA4B;AACvDV,IAAAA,KAAK,CAACW,QAAN,CAAed,QAAQ,CAACO,SAAS,CAACK,IAAD,CAAV,EAAiBC,QAAjB,CAAvB;AACAP,IAAAA,OAAO,CAACS,IAAR,CAAa,YAAb;AACH,GAH6B,EAG5B,CAACP,YAAD,EAAcR,QAAd,EAAuBO,SAAvB,CAH4B,CAA9B;AAIA,QAAMS,aAAa,GAAClB,WAAW,CAAC,CAAC;AAACa,IAAAA,MAAM,EAAC;AAACC,MAAAA,IAAD;AAAMC,MAAAA;AAAN;AAAR,GAAD,KAA4B;AACxDI,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAS,CAACK,IAAD,CAArB;AACAT,IAAAA,KAAK,CAACW,QAAN,CAAeb,SAAS,CAACM,SAAS,CAACK,IAAD,CAAV,EAAiBC,QAAjB,CAAxB;AACD,GAH4B,EAG3B,CAACN,SAAD,EAAWC,YAAX,EAAwBP,SAAxB,CAH2B,CAA/B;AAMA,QAAMkB,aAAa,GAACrB,WAAW,CAAC,CAAC;AAACa,IAAAA,MAAM,EAAC;AAACC,MAAAA;AAAD;AAAR,GAAD,KAAmB;AAC/CT,IAAAA,KAAK,CAACW,QAAN,CAAeZ,SAAS,CAACK,SAAS,CAACK,IAAD,CAAV,CAAxB;AACAN,IAAAA,OAAO,CAACS,IAAR,CAAa,QAAb;AACD,GAH4B,EAG3B,CAACP,YAAD,EAAcN,SAAd,EAAwBK,SAAxB,CAH2B,CAA/B;AAKA,QAAMa,iBAAiB,GAACtB,WAAW,CAAC,MAAI;AACpCQ,IAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AAED,GAHgC,EAG/B,CAACP,YAAD,EAAcF,OAAd,CAH+B,CAAnC;AAIA,QAAMe,iBAAiB,GAACvB,WAAW,CAAC,MAAI;AACpCQ,IAAAA,OAAO,CAACS,IAAR,CAAa,YAAb;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACD,GAHgC,EAG/B,CAACE,YAAD,EAAcF,OAAd,CAH+B,CAAnC;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACf0B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,KAAxB,EAA8Bb,YAA9B;AACAY,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAA+BP,aAA/B;AACAM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAA+BJ,aAA/B;AACAG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,gBAAxB,EAAyCH,iBAAzC;AACAE,IAAAA,MAAM,CAACC,gBAAP,CAAwB,gBAAxB,EAAyCF,iBAAzC;AAEA,WAAO,MAAI;AACPC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,KAA3B,EAAiCd,YAAjC;AACAY,MAAAA,MAAM,CAACE,mBAAP,CAA2B,MAA3B,EAAkCR,aAAlC;AACAM,MAAAA,MAAM,CAACE,mBAAP,CAA2B,MAA3B,EAAkCL,aAAlC;AACAG,MAAAA,MAAM,CAACE,mBAAP,CAA2B,gBAA3B,EAA4CH,iBAA5C;AACAC,MAAAA,MAAM,CAACE,mBAAP,CAA2B,gBAA3B,EAA4CJ,iBAA5C;AACH,KAND;AAQA,GAfQ,EAeN,CAACV,YAAD,EAAcM,aAAd,EAA4BG,aAA5B,EAA0CE,iBAA1C,EAA4DD,iBAA5D,CAfM,CAAT;AAmBAxB,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGY,YAAY,IAAE,IAAjB,EAAuB;AAEvBC,IAAAA,eAAe,CAACV,OAAO,CAAC;AACpB0B,MAAAA,GAAG,EAAE,wEADe;AAEpBC,MAAAA,SAAS,EAAE,CAAC;AAACC,QAAAA,OAAD;AAASC,QAAAA;AAAT,OAAD,KAAuB;AAE9BN,QAAAA,MAAM,CAACO,aAAP,CAAqB,IAAIC,WAAJ,CAAgBH,OAAhB,EAAwB;AAAChB,UAAAA,MAAM,EAACiB;AAAR,SAAxB,CAArB;AACH;AALmB,KAAD,CAAR,CAAf;AAOH,GAXQ,EAWN,CAACpB,YAAD,CAXM,CAAT;AAYA,SACE,IADF;AAGH;;GAlFuBH,I;UACVD,U;;;KADUC,I","sourcesContent":["import {useEffect,useState,useCallback} from 'react'\r\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\r\nimport {buyStock,sellStock,viewStock} from '../redux/actions.js';\r\nimport store from '../redux/store.js';\r\nimport {useHistory} from 'react-router-dom';\r\nexport default function Alan() {\r\nconst history=useHistory();\r\n    \r\n    \r\n    var stockList={\r\n        'Apple': 'AAPL',\r\n        'Microsoft':'MSFT',\r\n        'Facebook':'FB',\r\n        'Alphabet':'GOOG',\r\n        'Google':'GOOG',\r\n        'Alibaba':'BABA',\r\n        'Tesla':'TSLA',\r\n        'Nvidia':'NVDA',\r\n        'Intel':'INTC',\r\n        'Salesforce':'CRM',\r\n        'Advanced Micro Devices':'AMD',\r\n        'Paypal':'PYPL',\r\n        'Electronics art':'EA',\r\n        'EA':'EA',\r\n        'Match group':'MTCH',\r\n        'Zillow group':'ZG'\r\n       };\r\n    const [alanInstance, setAlanInstance] = useState();\r\n\r\n    const buyStockAlan=useCallback(({detail:{name,quantity}})=>{\r\n        store.dispatch(buyStock(stockList[name],quantity));\r\n        history.push('/portfolio')\r\n    },[alanInstance,buyStock,stockList]);\r\n    const sellStockAlan=useCallback(({detail:{name,quantity}})=>{\r\n        console.log(stockList[name]);\r\n        store.dispatch(sellStock(stockList[name],quantity));\r\n      },[stockList,alanInstance,sellStock]);\r\n\r\n\r\n    const viewStockAlan=useCallback(({detail:{name}})=>{\r\n        store.dispatch(viewStock(stockList[name]))\r\n        history.push('/stock');\r\n      },[alanInstance,viewStock,stockList]);\r\n\r\n    const openDashboardAlan=useCallback(()=>{\r\n        history.push('/');\r\n        \r\n      },[alanInstance,history]);\r\n    const openPortfolioAlan=useCallback(()=>{\r\n        history.push('/portfolio');\r\n        console.log(history)\r\n      },[alanInstance,history]);\r\n    \r\n    useEffect(() => {\r\n     window.addEventListener('BUY',buyStockAlan);\r\n     window.addEventListener('SELL',sellStockAlan);\r\n     window.addEventListener('VIEW',viewStockAlan);\r\n     window.addEventListener('OPEN-PORTFOLIO',openDashboardAlan);\r\n     window.addEventListener('OPEN-DASHBOARD',openPortfolioAlan);\r\n\r\n     return ()=>{\r\n         window.removeEventListener('BUY',buyStockAlan);\r\n         window.removeEventListener('SELL',sellStockAlan);\r\n         window.removeEventListener('VIEW',viewStockAlan);\r\n         window.removeEventListener('OPEN-PORTFOLIO',openPortfolioAlan);\r\n         window.removeEventListener('OPEN-DASHBOARD',openDashboardAlan);\r\n     }\r\n        \r\n    }, [buyStockAlan,sellStockAlan,viewStockAlan,openPortfolioAlan,openDashboardAlan])\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(alanInstance!=null) return;\r\n\r\n        setAlanInstance(alanBtn({ \r\n            key: 'c0558ab0ae1d903f14cf002e918a2eae2e956eca572e1d8b807a3e2338fdd0dc/stage',\r\n            onCommand: ({command,payload}) => {\r\n                \r\n                window.dispatchEvent(new CustomEvent(command,{detail:payload}));\r\n            }\r\n          }))\r\n    }, [alanInstance])\r\n    return (\r\n      null\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}