{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PRATHAM\\\\Desktop\\\\StockDashBoard\\\\dashboard\\\\src\\\\components\\\\PortfolioComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { buyStock, sellStock, viewStock, removeStock } from '../redux/actions.js';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PortfolioComponent({\n  portfolioElement,\n  products,\n  buyStock,\n  sellStock,\n  removeStock,\n  viewStock\n}) {\n  _s();\n\n  const [inputQuantity, setInputQuantity] = useState(0);\n  const [shouldNavigate, setShouldNavigate] = useState(false);\n  if (shouldNavigate) return;\n\n  /*#__PURE__*/\n  _jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n\n  const stockName = portfolioElement.longName;\n  const buyPrice = portfolioElement.regularMarketPrice;\n  const quantity = portfolioElement.quantity;\n  const stockPrice = products.find(e => portfolioElement.symbol === e.symbol).regularMarketPrice; // console.log(stockPrice);\n  // const change=portfolioElement.regularMarketChange;\n\n  const priceColor = stockPrice - buyPrice < 0 ? 'product-price-red' : 'product-price-green';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"product-heading\",\n      children: [stockName, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"portfolio-price-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: priceColor,\n        children: [\" Cost Price : \", buyPrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"quantity-display\",\n      children: [\"Stock qty\", ' : ', quantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"quantitty\",\n        placeholder: \"\",\n        min: 1,\n        onChange: e => setInputQuantity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          buyStock(portfolioElement.symbol, inputQuantity);\n          setShouldNavigate(true);\n        },\n        className: \"btn-buy\",\n        children: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          sellStock(portfolioElement.symbol, inputQuantity);\n          removeStock();\n          setShouldNavigate(true);\n        },\n        className: \"btn-sell\",\n        children: \"Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      onClick: () => viewStock(portfolioElement.symbol),\n      to: \"/stock\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"view\",\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PortfolioComponent, \"hBGSZ6o3Cgf2/eLIaafFOOXpnwA=\");\n\n_c = PortfolioComponent;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    buyStock: (id, qty) => {\n      dispatch(buyStock(id, qty));\n    },\n    sellStock: (id, qty) => {\n      dispatch(sellStock(id, qty));\n    },\n    removeStock: () => {\n      dispatch(removeStock());\n    },\n    viewStock: id => {\n      dispatch(viewStock(id));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(PortfolioComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioComponent\");","map":{"version":3,"sources":["C:/Users/PRATHAM/Desktop/StockDashBoard/dashboard/src/components/PortfolioComponent.js"],"names":["React","useState","useEffect","Link","connect","buyStock","sellStock","viewStock","removeStock","Redirect","PortfolioComponent","portfolioElement","products","inputQuantity","setInputQuantity","shouldNavigate","setShouldNavigate","stockName","longName","buyPrice","regularMarketPrice","quantity","stockPrice","find","e","symbol","priceColor","target","value","mapDispatchToProps","dispatch","id","qty"],"mappings":"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","sourcesContent":["\r\nimport React,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport{buyStock,sellStock,viewStock,removeStock} from '../redux/actions.js'\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n function PortfolioComponent({portfolioElement,products,buyStock,sellStock,removeStock,viewStock}) {\r\n\r\n  \r\n   \r\n    const[inputQuantity, setInputQuantity] =useState(0);\r\n    const [shouldNavigate,setShouldNavigate]=useState(false);\r\n \r\n\r\n  \r\n        if(shouldNavigate)\r\n        return\r\n        <Redirect to='/' />\r\n    \r\n    const stockName=portfolioElement.longName;\r\n    const buyPrice=portfolioElement.regularMarketPrice;\r\n    const quantity=portfolioElement.quantity;\r\n    const stockPrice=products.find(e=>portfolioElement.symbol===e.symbol).regularMarketPrice;\r\n    // console.log(stockPrice);\r\n    // const change=portfolioElement.regularMarketChange;\r\n    const priceColor=stockPrice-buyPrice<0?'product-price-red':'product-price-green';\r\n   \r\n       \r\n    return (\r\n        <div className=\"product-container\">\r\n        <h3 className=\"product-heading\">{stockName} </h3>\r\n\r\n        <div className=\"portfolio-price-container\" >\r\n\r\n        <h4 className={priceColor}> Cost Price : {buyPrice}</h4>\r\n\r\n        {/* <h4 className={priceColor}> Current price : {stockPrice}</h4> */}\r\n\r\n        </div>\r\n    \r\n        <span className=\"quantity-display\">Stock qty{' : '}{quantity}</span>\r\n        <div className=\"btn-container\">\r\n            <input type=\"number\" className=\"quantitty\" placeholder=\"\" min={1} onChange={(e)=>setInputQuantity(e.target.value)}></input>\r\n            <button onClick={ ()=>{\r\n                                    buyStock(portfolioElement.symbol,inputQuantity)\r\n                                    setShouldNavigate(true)\r\n                                   }} className=\"btn-buy\">Buy</button>\r\n            <button onClick={()=>{               \r\n                                   sellStock(portfolioElement.symbol,inputQuantity)\r\n                                   removeStock()\r\n                                   setShouldNavigate(true)\r\n                                   }\r\n                                   } className=\"btn-sell\">Sell</button>\r\n        </div>\r\n        \r\n        <Link onClick={()=>viewStock(portfolioElement.symbol)} to=\"/stock\">\r\n        <button className=\"view\">Details</button></Link>\r\n    </div>\r\n    )\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        buyStock:(id,qty)=>{\r\n            dispatch(buyStock(id,qty))\r\n        },\r\n        sellStock:(id,qty)=>{\r\n            dispatch(sellStock(id,qty))\r\n        },\r\n        removeStock:()=>{\r\n            dispatch(removeStock())\r\n        },\r\n        viewStock:(id)=>{\r\n            dispatch(viewStock(id))\r\n        }\r\n    }\r\n\r\n}\r\nexport default connect(null,mapDispatchToProps)(PortfolioComponent);\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}